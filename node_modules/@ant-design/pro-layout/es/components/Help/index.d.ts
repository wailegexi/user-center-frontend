import type { PopoverProps, ModalProps, DrawerProps } from 'antd';
import React from 'react';
import type { ProHelpDataSource, ProHelpDataSourceChildren } from './HelpProvide';
import { ProHelpProvide } from './HelpProvide';
import { ProHelpSelect } from './Search';
export type { ProHelpDataSource, ProHelpDataSourceChildren };
export { ProHelpProvide, ProHelpSelect };
export declare type ProHelpPanelProps = {
    /**
     * 帮助面板首次打开时的默认选中文档的键名
     */
    defaultSelectedKey?: string;
    /**
     * 当前选中的帮助文档的键名。如果提供了这个 prop，那么该组件将是一个受控组件，其状态将由父组件管理。如果未提供，那么该组件将是一个非受控组件，其状态将在组件内部管理。
     */
    selectedKey?: string;
    /**
     * 当选中的文档键名发生变化时调用的回调函数。新的键名将作为参数传递给该函数。
     */
    onSelectedKeyChange?: (key: string | undefined) => void;
    /**
     *控制左侧面板是否能够打开
     */
    showLeftPanel?: boolean;
    /**
     * 当左侧面板打开状态发生变化时调用的回调函数。新的打开状态将作为参数传递给该函数。
     */
    onShowLeftPanelChange?: (show: boolean) => void;
    /**
     * 是否显示边框
     */
    bordered?: boolean;
    /**
     * 当帮助面板关闭时调用的回调函数。
     */
    onClose?: () => void;
    /**
     * 帮助面板的高度，可以是数字或字符串类型。
     */
    height?: number | string;
};
export declare type ProHelpProps<ValueType> = {
    /**
     * 帮助文档的数据源，包含一组帮助文档数据，每个数据包含标题和内容等信息。
     */
    dataSource: ProHelpDataSource<ValueType>[];
    /**
     * 帮助组件的子组件，用于渲染自定义的帮助内容。
     * 是一个键值对结构的集合，其中：
     * 键（key）为字符串类型；
     * 值（value）为一个函数类型，该函数接受两个参数：一个名为 item 的 ProHelpDataSourceChildren 类型的对象，表示一个 ProHelp 数据源子项的子项；
     * 一个名为 index 的数字类型参数，表示该子项在父级子项数组中的索引。
     * 该函数返回一个 ReactNode 类型的元素，用于表示该 ProHelp 数据源子项子项应该渲染的 UI 元素。
     * 这个 Map 的作用是将 ProHelp 数据源子项子项的 valueType 属性与对应的渲染函数进行映射，从而实现在渲染 ProHelp 数据源时动态地选择渲染方法。
     * 在实际使用时，我们可以通过判断子项的 valueType 属性，从 valueTypeMap 中取出对应的渲染函数，再将该子项和渲染函数作为参数传入 renderDataSourceItem 函数中即可。
     */
    valueTypeMap?: Map<string, (item: ProHelpDataSourceChildren<ValueType>, index: number) => React.ReactNode>;
    /**
     * 帮助组件的子组件，用于渲染自定义的帮助内容。
     */
    children?: React.ReactNode;
};
export declare type ProHelpContentPanelProps = {
    /**
     * 控制当前选中的帮助文档
     */
    selectedKey: React.Key;
};
/**
 * 控制具体的帮助文档显示组件
 * selectedKey 来展示对应的内容。它会根据不同的item.valueType值来展示不同的内容，包括标题、图片、超链接等。
 * @param ProHelpContentPanelProps
 * @returns
 */
export declare const ProHelpContentPanel: React.FC<ProHelpContentPanelProps>;
/**
 * ProHelpPanel 组件是一个帮助中心面板组件，具有可折叠的左侧菜单和右侧帮助内容区域。
 * 左侧菜单显示了帮助文档的目录结构，右侧帮助内容区域显示了用户选中的帮助文档内容。
 * 在左侧菜单中，用户可以通过点击目录来选择并显示相应的文档内容。
 * @param param0
 * @returns
 */
export declare const ProHelpPanel: React.FC<ProHelpPanelProps>;
export declare const ProHelp: <ValueTypeMap = {
    text: any;
}>({ dataSource, valueTypeMap, ...props }: ProHelpProps<ValueTypeMap>) => JSX.Element;
export declare type ProHelpPopoverProps = Omit<PopoverProps, 'content'> & {
    /**
     * 悬浮提示文字的 CSS 类名
     */
    textClassName?: string;
    /**
     * Popover 内容的 content 的 CSS 类名
     */
    popoverContextClassName?: string;
    /**
     * 悬浮提示文字的 CSS 样式对象
     */
    textStyle?: React.CSSProperties;
    /**
     * 当前选中的帮助文档的 key 值
     */
    selectedKey: string;
    /**
     * 可选的悬浮提示 Popover 组件的 Props，用于自定义悬浮提示的样式和行为。
     * 该属性可以传递 Ant Design Popover 组件的 props，如位置、大小、触发方式等等
     * @see 注意，content 属性已经被从 PopoverProps 中删除，因为这个属性由 ProHelpPopover 内部控制。
     */
    popoverProps?: PopoverProps;
};
/**
 * 渲染一个弹出式提示框，其中显示了一个ProHelpContentPanel，展示帮助文案的详情
 * @param popoverProps 要传递给 Drawer 组件的属性。
 * @param props 要传递给 ProHelpPanel 组件的属性。
 */
export declare const ProHelpPopover: React.FC<ProHelpPopoverProps>;
export declare type ProHelpDrawerProps = {
    /**
     * Ant Design Drawer 组件的 Props，可以传递一些选项，如位置、大小、关闭方式等等。
     */
    drawerProps: DrawerProps;
} & Omit<ProHelpPanelProps, 'onClose'>;
/**
 * 渲染一个抽屉，其中显示了一个 ProHelpPanel。
 * @param drawerProps 要传递给 Drawer 组件的属性。
 * @param props 要传递给 ProHelpPanel 组件的属性。
 */
export declare const ProHelpDrawer: React.FC<ProHelpDrawerProps>;
export declare type ProHelpModalProps = {
    /**
     * Ant Design Modal 组件的 props，可以传递一些选项，如位置、大小、关闭方式等等。
     */
    modalProps?: ModalProps;
} & Omit<ProHelpPanelProps, 'onClose'>;
/**
 * 渲染一个模态对话框，其中显示了一个 ProHelpPanel。
 * @param modalProps 要传递给 Modal 组件的属性。
 * @param props 要传递给 ProHelpPanel 组件的属性。
 */
export declare const ProHelpModal: React.FC<ProHelpModalProps>;
