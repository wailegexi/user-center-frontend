"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProHelpPopover = exports.ProHelpPanel = exports.ProHelpModal = exports.ProHelpDrawer = exports.ProHelpContentPanel = exports.ProHelp = void 0;
Object.defineProperty(exports, "ProHelpProvide", {
  enumerable: true,
  get: function get() {
    return _HelpProvide.ProHelpProvide;
  }
});
Object.defineProperty(exports, "ProHelpSelect", {
  enumerable: true,
  get: function get() {
    return _Search.ProHelpSelect;
  }
});
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _icons = require("@ant-design/icons");
var _proProvider = require("@ant-design/pro-provider");
var _classnames = _interopRequireDefault(require("classnames"));
var _antd = require("antd");
var _react = _interopRequireWildcard(require("react"));
var _useMergedState9 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));
var _HelpProvide = require("./HelpProvide");
var _style = require("./style");
var _Search = require("./Search");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["bordered", "onClose", "height"],
  _excluded2 = ["dataSource", "valueTypeMap"],
  _excluded3 = ["drawerProps"],
  _excluded4 = ["modalProps"];
/**
 * 控制具体的帮助文档显示组件
 * selectedKey 来展示对应的内容。它会根据不同的item.valueType值来展示不同的内容，包括标题、图片、超链接等。
 * @param ProHelpContentPanelProps
 * @returns
 */
var ProHelpContentPanel = function ProHelpContentPanel(_ref) {
  var _dataSourceMap$get;
  var selectedKey = _ref.selectedKey;
  var _useContext = (0, _react.useContext)(_HelpProvide.ProHelpProvide),
    dataSource = _useContext.dataSource,
    valueTypeMap = _useContext.valueTypeMap;
  var dataSourceMap = (0, _react.useMemo)(function () {
    var map = new Map();
    dataSource.forEach(function (page) {
      page.children.forEach(function (item) {
        map.set(item.key || item.title, item.children);
      });
    });
    return map;
  }, [dataSource]);
  /**
   * itemRender 的定义
   * @param {ProHelpDataSourceChildren} item
   * @param {number} index
   * @return {*}
   */
  var itemRender = function itemRender(item, index) {
    // 自定义的渲染，优先级最高
    if (valueTypeMap.has(item.valueType)) {
      var _valueTypeMap$get;
      return (_valueTypeMap$get = valueTypeMap.get(item.valueType)) === null || _valueTypeMap$get === void 0 ? void 0 : _valueTypeMap$get(item, index);
    }
    if (item.valueType === 'h1') {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Typography.Title, {
        style: {
          marginTop: 0
        },
        level: 3,
        children: item.children
      }, index);
    }
    if (item.valueType === 'h2') {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Typography.Title, {
        style: {
          marginTop: 20
        },
        level: 5,
        children: item.children
      }, index);
    }
    if (item.valueType === 'image') {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        style: {
          marginBlock: 12
        },
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Image, (0, _objectSpread2.default)({}, item.children))
      }, index);
    }
    if (item.valueType === 'inlineLink') {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Typography.Text, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("a", (0, _objectSpread2.default)({}, item.children))
      }, index);
    }
    if (item.valueType === 'link') {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Typography.Text, {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("a", (0, _objectSpread2.default)({}, item.children))
        }, index)
      }, index);
    }
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Typography.Text, {
      children: item.children
    }, index);
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    children: (_dataSourceMap$get = dataSourceMap.get(selectedKey)) === null || _dataSourceMap$get === void 0 ? void 0 : _dataSourceMap$get.map(itemRender)
  });
};

/**
 * ProHelpPanel 组件是一个帮助中心面板组件，具有可折叠的左侧菜单和右侧帮助内容区域。
 * 左侧菜单显示了帮助文档的目录结构，右侧帮助内容区域显示了用户选中的帮助文档内容。
 * 在左侧菜单中，用户可以通过点击目录来选择并显示相应的文档内容。
 * @param param0
 * @returns
 */
exports.ProHelpContentPanel = ProHelpContentPanel;
var ProHelpPanel = function ProHelpPanel(_ref2) {
  var _process$env$NODE_ENV, _token$layout, _token$layout$sider, _token$layout2, _token$layout2$sider, _token$layout3, _token$layout3$sider, _token$layout4, _token$layout4$sider, _token$layout5, _token$layout5$sider, _token$layout6, _token$layout6$sider;
  var _ref2$bordered = _ref2.bordered,
    bordered = _ref2$bordered === void 0 ? true : _ref2$bordered,
    onClose = _ref2.onClose,
    height = _ref2.height,
    props = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
  var _useContext2 = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext),
    getPrefixCls = _useContext2.getPrefixCls;
  var className = getPrefixCls('pro-help');
  var _useStyle = (0, _style.useStyle)(className),
    wrapSSR = _useStyle.wrapSSR;
  var _useContext3 = (0, _react.useContext)(_HelpProvide.ProHelpProvide),
    dataSource = _useContext3.dataSource;
  var _useMergedState = (0, _useMergedState9.default)(undefined, {
      defaultValue: props.defaultSelectedKey,
      value: props.selectedKey,
      onChange: props.onSelectedKeyChange
    }),
    _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
    selectedKey = _useMergedState2[0],
    setSelectedKey = _useMergedState2[1];
  var _useState = (0, _react.useState)(''),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    openKey = _useState2[0],
    setOpenKey = _useState2[1];
  var _useContext4 = (0, _react.useContext)(_proProvider.ProProvider),
    token = _useContext4.token;
  var _useMergedState3 = (0, _useMergedState9.default)(true, {
      value: props.showLeftPanel,
      onChange: props.onShowLeftPanelChange
    }),
    _useMergedState4 = (0, _slicedToArray2.default)(_useMergedState3, 2),
    showLeftPanel = _useMergedState4[0],
    setShowLeftPanel = _useMergedState4[1];
  return wrapSSR( /*#__PURE__*/(0, _jsxRuntime.jsxs)(_antd.Card, {
    bordered: bordered,
    title: "\u5E2E\u52A9\u4E2D\u5FC3",
    bodyStyle: {
      display: 'flex',
      padding: 0,
      margin: 0,
      height: '100%',
      width: '100%'
    },
    size: "small",
    extra: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "".concat(className, "-actions"),
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "".concat(className, "-actions-item"),
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_icons.ProfileOutlined, {
          title: "collapse panel",
          onClick: function onClick() {
            setShowLeftPanel(!showLeftPanel);
          }
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Search.ProHelpSelect, {
        iconClassName: "".concat(className, "-actions-item"),
        className: "".concat(className, "-actions-input"),
        value: selectedKey,
        onChange: function onChange(value, item) {
          setSelectedKey(value);
          setOpenKey(item === null || item === void 0 ? void 0 : item.dataItemKey);
        }
      }), onClose ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "".concat(className, "-actions-item"),
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_icons.CloseOutlined, {
          title: "close panel",
          onClick: function onClick() {
            onClose === null || onClose === void 0 ? void 0 : onClose();
          }
        })
      }) : null]
    }),
    children: [showLeftPanel ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "".concat(className, "-left-panel"),
      style: {
        height: height
      },
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.ConfigProvider, {
        theme: {
          hashed: ((_process$env$NODE_ENV = process.env.NODE_ENV) === null || _process$env$NODE_ENV === void 0 ? void 0 : _process$env$NODE_ENV.toLowerCase()) !== 'test',
          components: {
            Menu: {
              lineHeight: 1.2,
              controlHeightLG: 26,
              fontSize: 12,
              radiusItem: 4,
              colorActiveBarWidth: 0,
              colorActiveBarBorderSize: 0,
              colorItemBgSelected: (token === null || token === void 0 ? void 0 : (_token$layout = token.layout) === null || _token$layout === void 0 ? void 0 : (_token$layout$sider = _token$layout.sider) === null || _token$layout$sider === void 0 ? void 0 : _token$layout$sider.colorBgMenuItemSelected) || 'rgba(0, 0, 0, 0.04)',
              colorItemBgActive: (token === null || token === void 0 ? void 0 : (_token$layout2 = token.layout) === null || _token$layout2 === void 0 ? void 0 : (_token$layout2$sider = _token$layout2.sider) === null || _token$layout2$sider === void 0 ? void 0 : _token$layout2$sider.colorBgMenuItemHover) || 'rgba(0, 0, 0, 0.04)',
              colorItemText: (token === null || token === void 0 ? void 0 : (_token$layout3 = token.layout) === null || _token$layout3 === void 0 ? void 0 : (_token$layout3$sider = _token$layout3.sider) === null || _token$layout3$sider === void 0 ? void 0 : _token$layout3$sider.colorTextMenu) || 'rgba(0, 0, 0, 0.65)',
              colorItemTextHover: (token === null || token === void 0 ? void 0 : (_token$layout4 = token.layout) === null || _token$layout4 === void 0 ? void 0 : (_token$layout4$sider = _token$layout4.sider) === null || _token$layout4$sider === void 0 ? void 0 : _token$layout4$sider.colorTextMenuActive) || 'rgba(0, 0, 0, 0.85)',
              colorItemTextSelected: (token === null || token === void 0 ? void 0 : (_token$layout5 = token.layout) === null || _token$layout5 === void 0 ? void 0 : (_token$layout5$sider = _token$layout5.sider) === null || _token$layout5$sider === void 0 ? void 0 : _token$layout5$sider.colorTextMenuSelected) || 'rgba(0, 0, 0, 1)',
              colorItemBg: 'transparent',
              colorSubItemBg: 'transparent',
              colorBgElevated: (token === null || token === void 0 ? void 0 : (_token$layout6 = token.layout) === null || _token$layout6 === void 0 ? void 0 : (_token$layout6$sider = _token$layout6.sider) === null || _token$layout6$sider === void 0 ? void 0 : _token$layout6$sider.colorBgMenuItemCollapsedElevated) || '#fff'
            }
          }
        },
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Menu, {
          className: "".concat(className, "-left-panel-menu"),
          openKeys: [openKey],
          onOpenChange: function onOpenChange(keys) {
            setOpenKey(keys.at(-1) || '');
          },
          selectedKeys: selectedKey ? [selectedKey] : [],
          onSelect: function onSelect(_ref3) {
            var selectedKeys = _ref3.selectedKeys;
            setSelectedKey(selectedKeys.at(-1) || '');
          },
          mode: "inline",
          items: dataSource.map(function (item) {
            return {
              key: item.key,
              label: item.title,
              children: item.children.map(function (child) {
                return {
                  key: child.key,
                  label: child.title
                };
              })
            };
          })
        })
      })
    }) : null, /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "".concat(className, "-content-panel"),
      style: {
        height: height
      },
      children: selectedKey ? /*#__PURE__*/(0, _jsxRuntime.jsx)(ProHelpContentPanel, {
        selectedKey: selectedKey
      }) : null
    })]
  }));
};
exports.ProHelpPanel = ProHelpPanel;
var ProHelp = function ProHelp(_ref4) {
  var dataSource = _ref4.dataSource,
    _ref4$valueTypeMap = _ref4.valueTypeMap,
    valueTypeMap = _ref4$valueTypeMap === void 0 ? new Map() : _ref4$valueTypeMap,
    props = (0, _objectWithoutProperties2.default)(_ref4, _excluded2);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_HelpProvide.ProHelpProvide.Provider, {
    value: {
      dataSource: dataSource,
      valueTypeMap: valueTypeMap
    },
    children: props.children
  });
};
exports.ProHelp = ProHelp;
/**
 * 渲染一个弹出式提示框，其中显示了一个ProHelpContentPanel，展示帮助文案的详情
 * @param popoverProps 要传递给 Drawer 组件的属性。
 * @param props 要传递给 ProHelpPanel 组件的属性。
 */
var ProHelpPopover = function ProHelpPopover(props) {
  var _useContext5 = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext),
    getPrefixCls = _useContext5.getPrefixCls;
  var className = getPrefixCls('pro-help');
  var _useStyle2 = (0, _style.useStyle)(className),
    wrapSSR = _useStyle2.wrapSSR;
  return wrapSSR( /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Popover, (0, _objectSpread2.default)((0, _objectSpread2.default)({
    overlayInnerStyle: {
      padding: 0
    },
    content: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: (0, _classnames.default)("".concat(className, "-popover-content"), props.popoverContextClassName),
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(ProHelpContentPanel, {
        selectedKey: props.selectedKey
      })
    })
  }, props.popoverProps), {}, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
      className: (0, _classnames.default)("".concat(className, "-popover-text"), props.textClassName),
      children: props.children
    })
  })));
};
exports.ProHelpPopover = ProHelpPopover;
/**
 * 渲染一个抽屉，其中显示了一个 ProHelpPanel。
 * @param drawerProps 要传递给 Drawer 组件的属性。
 * @param props 要传递给 ProHelpPanel 组件的属性。
 */
var ProHelpDrawer = function ProHelpDrawer(_ref5) {
  var drawerProps = _ref5.drawerProps,
    props = (0, _objectWithoutProperties2.default)(_ref5, _excluded3);
  var _useMergedState5 = (0, _useMergedState9.default)(false, {
      value: drawerProps.open,
      onChange: drawerProps.afterOpenChange
    }),
    _useMergedState6 = (0, _slicedToArray2.default)(_useMergedState5, 2),
    drawerOpen = _useMergedState6[0],
    setDrawerOpen = _useMergedState6[1];
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Drawer, (0, _objectSpread2.default)((0, _objectSpread2.default)({
    width: 720,
    closeIcon: null,
    headerStyle: {
      display: 'none'
    },
    bodyStyle: {
      padding: 0
    },
    maskClosable: true
  }, drawerProps), {}, {
    open: drawerOpen,
    onClose: function onClose() {
      return setDrawerOpen(false);
    },
    afterOpenChange: function afterOpenChange(open) {
      setDrawerOpen(open);
    },
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(ProHelpPanel, (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {
      onClose: function onClose() {
        return setDrawerOpen(false);
      },
      bordered: false
    }))
  }));
};
exports.ProHelpDrawer = ProHelpDrawer;
/**
 * 渲染一个模态对话框，其中显示了一个 ProHelpPanel。
 * @param modalProps 要传递给 Modal 组件的属性。
 * @param props 要传递给 ProHelpPanel 组件的属性。
 */
var ProHelpModal = function ProHelpModal(_ref6) {
  var modalProps = _ref6.modalProps,
    props = (0, _objectWithoutProperties2.default)(_ref6, _excluded4);
  var _useMergedState7 = (0, _useMergedState9.default)(false, {
      value: modalProps === null || modalProps === void 0 ? void 0 : modalProps.open,
      onChange: modalProps === null || modalProps === void 0 ? void 0 : modalProps.afterClose
    }),
    _useMergedState8 = (0, _slicedToArray2.default)(_useMergedState7, 2),
    modalOpen = _useMergedState8[0],
    setModalOpen = _useMergedState8[1];
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Modal, (0, _objectSpread2.default)((0, _objectSpread2.default)({
    onCancel: function onCancel() {
      setModalOpen(false);
    },
    bodyStyle: {
      margin: -24
    },
    centered: true,
    closable: false,
    footer: null,
    width: 720,
    open: modalOpen,
    maskClosable: true
  }, modalProps), {}, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(ProHelpPanel, (0, _objectSpread2.default)((0, _objectSpread2.default)({
      height: 648
    }, props), {}, {
      onClose: function onClose() {
        return setModalOpen(false);
      }
    }))
  }));
};
exports.ProHelpModal = ProHelpModal;